extends layout

block content
    section#sideBar
        ul
            li
                a.back(href='../../list')
                    img(src = '../../images/back.png')
                    | 목록
            li
                a(href='../../list/chapter2')
                    h2 2. 변수
            li
                a(href='../../list/chapter2valueType') 자료형
            li
                a(href='../../list/chapter2memorySize') 메모리 크기
            li
                a.activeSide(href='../../list/chapter2format') 입출력 서식
            li
                a(href='../../list/chapter2quiz') 정리 문제!

    .Acc_content
        section#theory
            h2 데이터의 저장
            h3 서식 문자
            p.tab
                | printf()는 지정된 문자열을 표시하는 것 뿐 아니라, 서식을 지정하여 데이터를 표시할 수 있습니다.
                | 예를 들어 10을 출력하고자 할 때, 두 가지 방식으로 출력할 수 있습니다.
                br
                .psuedo
                    | printf("10");
                .psuedo
                    | printf("%d", 10);
            p.tab
                | 두번째 방식은 수치 10을 서식을 지정하여 표시한 것으로, 서식과 데이터가 대응되어야 합니다.
                | 여러 데이터를 표시하고자 할 때의 대응관계는 ',' 쉼표로 구분할 수 있습니다.
                br
                |                 위에서 사용한 %d는 정수를 10진수로 표시하도록 해줍니다.
                |                 서식 지정은 표시할 데이터의 종류에 따라 달라지며, 아래의 표와 같습니다.
            br
            img(src = '../../images/formatCharacter.png').explainImg
            p
            p.tab
                | 서식 문자를 사용하여 scanf 함수로 사용자로부터 입력을 받을 수도 있습니다. printf와 동일한 서식문자를 사용하지만, 차이점이 있습니다.
                br
                |               메모리에 데이터를 저장하는 것이기 때문에 변수의 주소, 즉 메모리에 직접적으로 접근하여 데이터를 써줘야합니다. 따라서 &(변수 이름)으로 서식문자와 대응시켜줍니다.
                br
                br
                img(src = '../../images/ex_format1.png').explainImg
                img(src = '../../images/ex_format1_result.png').explainImg
            p.tab
                | 여러 데이터를 저장하고 싶을 때는  scanf 함수에 ',' 쉼표를 사용하여 대응시켜주면 되는데 scanf 함수는 입력받을 때 엔터키나 스페이스바로 데이터를 구분하기 때문에
                | 큰따옴표 안에서 스페이스바로 구분을 해주고, 입력할 때 동일하게 데이터 입력 후 스페이스바 입력, 데이터 입력과 같은 형식으로 해주면 됩니다. 따라하기에 문제가 있으니 참고해주세요.
            br
            hr
            br
            h4 printf()의 서식지정
            p.tab
                | 왼쪽의 코드는 공백을 포함해서 3글자로 표시하라는 서식 형태이며, 오른쪽의 코드는 공백을 포함해서 3글자로 표시하되, 공백 자리에 0을 출력하라는 의미입니다.
                .psuedo
                    | printf("%
                    b 3
                    | d", 20);     출력결과:
                    span(style='color:gray') _
                    | 25
                    span(style='color:gray') -> _는 공백을 의미
                .psuedo
                    | printf("%
                    b 03
                    | d", 20);     출력결과: 025
            p.tab
                | 실수를 표시하는 %f 서식에서는 소수점 전후의 자릿수를 지정할 수 있습니다.
                br
                |               전체 6자리 중에서 소수점 이하로 출력하고 싶은 개수를 %.(숫자)f 로 지정해주면 표시하는 개수를 제어할 수 있어요. 이 때, 결과는 반올림되어 출력됩니다.
                .psuedo
                    | printf("%6
                    b .3
                    | d", 12.3456);     출력결과: 12.35
            br
            hr
            br
            h3 따라하기
            .follow
                h4 문제 4.
                    img#problemImage4.twentyImage
                h4 실수 출력 제어하기
                img.followImg(src='../../images/ex_format2.png')
                img.followImg(src='../../images/ex_format2_result.png')

                div#editor1.editorHalf
                    | #include &lt;stdio.h&gt;
                    | <br/>
                    | int main(){
                    | <br/>
                    |   return 0;
                    | }

                section#console1.consoleWindow
                button#button1.submitButton(type='submit') 제출

append script
    script(src='../javascripts/chapter2format.js')